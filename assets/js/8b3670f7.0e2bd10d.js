"use strict";(self.webpackChunkprem_docs=self.webpackChunkprem_docs||[]).push([[4061],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>h});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(r),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return r?n.createElement(h,o(o({ref:t},s),{},{components:r})):n.createElement(h,o({ref:t},s))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:a,o[1]=p;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},65467:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const i={id:"chat-quickstart",title:"Quick Start with OpenAI Client",sidebar_label:"Quick Start",sidebar_position:2},o="Quick Start with OpenAI Python Client",p={unversionedId:"prem-app/usage/audio-to-text/chat-quickstart",id:"prem-app/usage/audio-to-text/chat-quickstart",title:"Quick Start with OpenAI Client",description:"Install and Import all the necessary dependencies",source:"@site/docs/prem-app/usage/audio-to-text/openai.md",sourceDirName:"prem-app/usage/audio-to-text",slug:"/prem-app/usage/audio-to-text/chat-quickstart",permalink:"/docs/prem-app/usage/audio-to-text/chat-quickstart",draft:!1,editUrl:"https://github.com/premAI-io/dev-portal/blob/main/docs/prem-app/usage/audio-to-text/openai.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"chat-quickstart",title:"Quick Start with OpenAI Client",sidebar_label:"Quick Start",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Health",permalink:"/docs/prem-app/usage/audio-to-text/api/health-v-1-get"},next:{title:"Vector Store",permalink:"/docs/category/vector-store"}},l={},c=[{value:"Install and Import all the necessary dependencies",id:"install-and-import-all-the-necessary-dependencies",level:3},{value:"Change the base url in order to point to your Prem services",id:"change-the-base-url-in-order-to-point-to-your-prem-services",level:3},{value:"Use OpenAI Client to transcribe the audio file",id:"use-openai-client-to-transcribe-the-audio-file",level:3}],s={toc:c},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start-with-openai-python-client"},"Quick Start with OpenAI Python Client"),(0,a.kt)("h3",{id:"install-and-import-all-the-necessary-dependencies"},"Install and Import all the necessary dependencies"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"\n!pip install openai\n\nimport openai\n\n")),(0,a.kt)("h3",{id:"change-the-base-url-in-order-to-point-to-your-prem-services"},"Change the base url in order to point to your Prem services"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\nopenai.api_base = "http://localhost:10111/v1"\nopenai.api_key = "random-string"\n\n')),(0,a.kt)("h3",{id:"use-openai-client-to-transcribe-the-audio-file"},"Use OpenAI Client to transcribe the audio file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'\naudio_file = open("./sample.wav", "rb")\ntranscript = openai.Audio.transcribe("whisper-1", audio_file)\nprint(transcript)\n\n')))}d.isMDXComponent=!0}}]);